apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-micronout-deployment
  namespace: labs
spec:
  replicas: 3
  selector:
    matchLabels:
      app: app-micronout
  template:
    metadata:
      labels:
        app: app-micronout
    spec:
      containers:
        - name: kubernetes-labs-app-micronout
          image: ${IMAGE_NAME}:${IMAGE_TAG}
          resources:
            limits:
              memory: "800Mi"
              cpu: "500m"
            requests:
              memory: "400Mi"
              cpu: "250m"
          ports:
            - containerPort: 8080
          env:
            - name: MOCKAPI_PROJECT_SECRET
              valueFrom:
                configMapKeyRef:
                  name: app-micronout-config
                  key: mockapi_prefix
            - name: MOCKAPI_VERSION
              valueFrom:
                configMapKeyRef:
                  name: app-micronout-config
                  key: mockapi_version
---
apiVersion: v1
kind: Service
metadata:
  name: app-micronout-service-lb
  namespace: labs
  annotations:
    service.beta.kubernetes.io/vultr-loadbalancer-protocol: "http"
    service.beta.kubernetes.io/vultr-loadbalancer-label: "kubernetes-labs-service-lb"
    service.beta.kubernetes.io/vultr-loadbalancer-algorithm: "least_connections"
    service.beta.kubernetes.io/vultr-loadbalancer-healthcheck-path: "/health"
    service.beta.kubernetes.io/vultr-loadbalancer-healthcheck-check-interval: "10"
    service.beta.kubernetes.io/vultr-loadbalancer-healthcheck-response-timeout: "5"
    service.beta.kubernetes.io/vultr-loadbalancer-healthcheck-unhealthy-threshold: "5"
    service.beta.kubernetes.io/vultr-loadbalancer-healthcheck-healthy-threshold: "5"
spec:
  type: LoadBalancer
  selector:
    app: app-micronout
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-micronout-config
data:
  mockapi_prefix: "mockapi.io"
  mockapi_version: "api/v1"
